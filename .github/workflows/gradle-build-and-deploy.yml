name: Gradle Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. JDK 21 ÏÑ§Ïπò
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3. gradlew Ïã§ÌñâÍ∂åÌïú Î∂ÄÏó¨
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. ÌÖåÏä§Ìä∏ Ï†úÏô∏ ÎπåÎìú
      - name: Build without tests
        run: ./gradlew clean build -x test

      # 5. ÏÉùÏÑ±Îêú JAR ÌååÏùº Í≤ΩÎ°ú ÌôïÏù∏
      - name: Find built JAR name
        id: findjar
        run: |
          JAR_PATH=$(ls build/libs/*-SNAPSHOT.jar | head -n 1)
          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_ENV
          echo "üì¶ Found JAR: $JAR_PATH"

      # 6. Í∏∞Ï°¥ app.jar Ï†ïÎ¶¨
      - name: Clean old app.jar before copy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USER }}
          key: ${{ secrets.GCE_SSH_KEY }}
          script: |
            cd /home/ubuntu/rowing/springboot
            [ -d app.jar ] && rm -rf app.jar
            [ -f app.jar ] && rm -f app.jar
            echo "üßπ Cleaned old app.jar"

      # 7. JAR ÌååÏùº Î≥µÏÇ¨
      - name: Copy JAR to GCP VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USER }}
          key: ${{ secrets.GCE_SSH_KEY }}
          source: ${{ env.JAR_PATH }}
          target: "/home/ubuntu/rowing/springboot/app.jar"
          strip_components: 2

      # 8. Docker Compose ÎπåÎìú Î∞è Ïû¨ÏãúÏûë
      - name: SSH and deploy with docker compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USER }}
          key: ${{ secrets.GCE_SSH_KEY }}
          script: |
            cd /home/ubuntu/rowing/springboot
            docker compose down || true
            docker compose build --no-cache
            docker compose up -d
            docker compose ps
